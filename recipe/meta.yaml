# this number only needs to be increased if
# there are substantial infrastructure changes
{% set testing_generation = "0" %}
{% set libcxx_major = 16 %}

{% if libcxx_major is undefined %}
{% set libcxx_major = 99 %}
{% endif %}
{% if cxx_compiler_version is undefined %}
{% set cxx_compiler_version = libcxx_major %}
{% endif %}

package:
  name: libcxx-testing
  # version correspondence is: 0.{{ CLANG_MAJOR }}.{{ LIBCXX_MAJOR }}
  version: {{ testing_generation }}.{{ cxx_compiler_version }}.{{ libcxx_major }}

source:
  path: .

build:
  number: 1
  skip: true  # [not osx]
  script:
    echo "works!"

requirements:
  run:
    - python
    - pybind11
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - libcxx {{ libcxx_major }}.*
    # pin this to a specific clang version on osx
    - clang-{{ cxx_compiler_version }}
  {% if cxx_compiler_version|int < 16 and libcxx_major|int >= 16 %}
    # older clang builds don't make use of libcxx-devel, c.f.
    # https://github.com/conda-forge/clangdev-feedstock/pull/311
    - libcxx-devel
  {% endif %}
    - make
    - pip
    - libboost-devel

test:
  files:
    - pybind11_exception_rtti_test
    - boost_example.cpp

about:
  home: https://github.com/conda-forge/libcxx-testing-feedstock
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: pybind11_exception_rtti_test/README.md
  summary: 'a test of RTTI for exception passing in C++ and pybind11'

extra:
  recipe-maintainers:
    - beckermr
    - h-vetinari
